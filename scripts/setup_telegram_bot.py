#!/usr/bin/env python3
"""
Script ƒë·ªÉ thi·∫øt l·∫≠p Telegram Bot
"""

import os
import sys
import requests
from pathlib import Path

def create_telegram_bot():
    """H∆∞·ªõng d·∫´n t·∫°o Telegram bot"""
    print("ü§ñ Thi·∫øt l·∫≠p Telegram Bot")
    print("=" * 50)
    
    print("üìã C√°c b∆∞·ªõc t·∫°o Telegram Bot:")
    print()
    print("1Ô∏è‚É£ M·ªü Telegram v√† t√¨m @BotFather")
    print("   - G√µ @BotFather trong t√¨m ki·∫øm")
    print("   - Nh·∫•n v√†o k·∫øt qu·∫£ ƒë·∫ßu ti√™n")
    print()
    print("2Ô∏è‚É£ B·∫Øt ƒë·∫ßu chat v·ªõi BotFather")
    print("   - G√µ /start")
    print("   - G√µ /newbot")
    print()
    print("3Ô∏è‚É£ ƒê·∫∑t t√™n cho bot")
    print("   - Nh·∫≠p t√™n hi·ªÉn th·ªã (v√≠ d·ª•: Image Recovery Bot)")
    print("   - Nh·∫≠p username (ph·∫£i k·∫øt th√∫c b·∫±ng 'bot', v√≠ d·ª•: image_recovery_bot)")
    print()
    print("4Ô∏è‚É£ L·∫•y token")
    print("   - BotFather s·∫Ω g·ª≠i cho b·∫°n m·ªôt token")
    print("   - Copy token n√†y (d·∫°ng: 123456789:ABCdefGHIjklMNOpqrSTUvwxyz)")
    print()
    
    token = input("üîë Nh·∫≠p token bot (ho·∫∑c Enter ƒë·ªÉ b·ªè qua): ").strip()
    
    if token:
        # C·∫≠p nh·∫≠t file .env
        env_file = Path(".env")
        if env_file.exists():
            # ƒê·ªçc file hi·ªán t·∫°i
            with open(env_file, 'r') as f:
                content = f.read()
            
            # C·∫≠p nh·∫≠t token
            if "TELEGRAM_BOT_TOKEN=" in content:
                # Thay th·∫ø token c≈©
                lines = content.split('\n')
                for i, line in enumerate(lines):
                    if line.startswith("TELEGRAM_BOT_TOKEN="):
                        lines[i] = f"TELEGRAM_BOT_TOKEN={token}"
                        break
                content = '\n'.join(lines)
            else:
                # Th√™m token m·ªõi
                content += f"\nTELEGRAM_BOT_TOKEN={token}\n"
            
            # Ghi l·∫°i file
            with open(env_file, 'w') as f:
                f.write(content)
            
            print(f"‚úÖ Token ƒë√£ ƒë∆∞·ª£c l∆∞u v√†o file .env")
        else:
            print("‚ùå File .env kh√¥ng t·ªìn t·∫°i. Vui l√≤ng ch·∫°y setup.py tr∆∞·ªõc.")
            return False
    
    print()
    print("üìù C√°c b∆∞·ªõc ti·∫øp theo:")
    print("1. Ch·∫°y API: python main.py")
    print("2. Ch·∫°y bot: python run_bot.py")
    print("3. T√¨m bot tr√™n Telegram v√† b·∫Øt ƒë·∫ßu chat")
    print()
    
    return True

def test_bot_connection():
    """Test k·∫øt n·ªëi bot"""
    print("üß™ Test k·∫øt n·ªëi bot...")
    
    from config import config
    
    if not config.TELEGRAM_BOT_TOKEN:
        print("‚ùå TELEGRAM_BOT_TOKEN kh√¥ng ƒë∆∞·ª£c thi·∫øt l·∫≠p")
        return False
    
    try:
        # Test API call ƒë·∫øn Telegram
        url = f"https://api.telegram.org/bot{config.TELEGRAM_BOT_TOKEN}/getMe"
        response = requests.get(url, timeout=10)
        
        if response.status_code == 200:
            data = response.json()
            if data['ok']:
                bot_info = data['result']
                print("‚úÖ Bot k·∫øt n·ªëi th√†nh c√¥ng!")
                print(f"   T√™n bot: {bot_info['first_name']}")
                print(f"   Username: @{bot_info['username']}")
                print(f"   ID: {bot_info['id']}")
                return True
            else:
                print("‚ùå Token kh√¥ng h·ª£p l·ªá")
                return False
        else:
            print(f"‚ùå L·ªói API: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå L·ªói k·∫øt n·ªëi: {e}")
        return False

def setup_webhook():
    """Thi·∫øt l·∫≠p webhook (t√πy ch·ªçn)"""
    print("\nüîó Thi·∫øt l·∫≠p Webhook (t√πy ch·ªçn)")
    print("Webhook cho ph√©p bot nh·∫≠n tin nh·∫Øn qua HTTPS thay v√¨ polling")
    
    setup = input("B·∫°n c√≥ mu·ªën thi·∫øt l·∫≠p webhook kh√¥ng? (y/N): ").strip().lower()
    
    if setup == 'y':
        webhook_url = input("Nh·∫≠p URL webhook (v√≠ d·ª•: https://yourdomain.com/webhook): ").strip()
        
        if webhook_url:
            from config import config
            
            try:
                url = f"https://api.telegram.org/bot{config.TELEGRAM_BOT_TOKEN}/setWebhook"
                data = {'url': webhook_url}
                
                response = requests.post(url, data=data, timeout=10)
                
                if response.status_code == 200:
                    result = response.json()
                    if result['ok']:
                        print("‚úÖ Webhook ƒë√£ ƒë∆∞·ª£c thi·∫øt l·∫≠p!")
                    else:
                        print(f"‚ùå L·ªói thi·∫øt l·∫≠p webhook: {result['description']}")
                else:
                    print(f"‚ùå L·ªói HTTP: {response.status_code}")
                    
            except Exception as e:
                print(f"‚ùå L·ªói: {e}")
        else:
            print("‚ö†Ô∏è URL webhook kh√¥ng h·ª£p l·ªá")
    else:
        print("‚è≠Ô∏è B·ªè qua thi·∫øt l·∫≠p webhook")

def main():
    """Main function"""
    print("üöÄ Thi·∫øt l·∫≠p Telegram Bot cho Image Recovery")
    print("=" * 60)
    
    # T·∫°o bot
    if not create_telegram_bot():
        return
    
    # Test k·∫øt n·ªëi
    if test_bot_connection():
        print("\nüéâ Bot ƒë√£ ƒë∆∞·ª£c thi·∫øt l·∫≠p th√†nh c√¥ng!")
        
        # Thi·∫øt l·∫≠p webhook
        setup_webhook()
        
        print("\nüìã H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:")
        print("1. Ch·∫°y API server: python main.py")
        print("2. Ch·∫°y bot: python run_bot.py")
        print("3. T√¨m bot tr√™n Telegram v√† g·ª≠i /start")
        print("4. G·ª≠i ·∫£nh v√† prompt ƒë·ªÉ ph·ª•c h·ªìi ·∫£nh")
        
    else:
        print("\n‚ùå Thi·∫øt l·∫≠p bot th·∫•t b·∫°i")
        print("Vui l√≤ng ki·ªÉm tra l·∫°i token v√† th·ª≠ l·∫°i")

if __name__ == "__main__":
    main()
